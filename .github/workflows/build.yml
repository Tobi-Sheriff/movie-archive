name: Run Build
name: Run Build

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
  workflow_dispatch:

# Define the jobs to run
jobs:
  build:
  build:
    runs-on: ubuntu-latest
    env:
      DB_USER: ${{ secrets.POSTGRES_USER }}
      DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DB_NAME: ${{ secrets.POSTGRES_DB }}

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install PostgreSQL Extensions
        run: 
          PGPASSWORD=$DB_PASSWORD psql -U $DB_USER -h localhost -d $DB_NAME -c "CREATE EXTENSION IF NOT EXISTS pg_trgm;"
          PGPASSWORD=$DB_PASSWORD psql -U $DB_USER -h localhost -d $DB_NAME -c "CREATE EXTENSION IF NOT EXISTS fuzzystrmatch;"


      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Step 4: Run Jest tests
      - name: Run Jest Tests (File Storage)
        env:
          STORE_TYPE: file
        run: npm test

      # Step 5: Run database migrations
      - name: Run Database Migrations
        run: npx sequelize-cli db:migrate
        run: npx sequelize-cli db:migrate

      # Step 6: Run Jest tests
      - name: Run Jest Tests (DB Storage)
        env:
          DB_HOST: localhost
          DB_USER: "${{env.DB_USER}}"
          DB_PASSWORD: "${{env.DB_PASSWORD}}"
          DB_NAME: "${{env.DB_NAME}}"
          STORE_TYPE: db
        run: npm test
          
      # Step 7: Run Production deployment
      - name: Run Production deployment
      - name: Run Production deployment
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Deploying on $(whoami)@${{ secrets.SERVER_IP }}"

            # 1. Navigate to the project directory
            cd ~/sheriff_project/movie-archive
            pwd

            # 2. Pull the latest code
            git pull origin main

            # 3. Install dependencies, using ci for faster installation
            npm install

            # Step 4: Run database migrations
            npx sequelize-cli db:migrate

            # 5. Restart your Node.js application
            pm2 restart index.js || pm2 start index.js --name movie-archive

